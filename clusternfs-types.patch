diff -ur ClusterNFS.org/mount_xdr.c ClusterNFS/mount_xdr.c
--- ClusterNFS.org/mount_xdr.c	Tue Sep 25 01:30:02 2001
+++ ClusterNFS/mount_xdr.c	Tue Dec 21 16:16:43 2004
@@ -46,7 +46,7 @@
 xdr_fhandle(XDR *xdrs, fhandle objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_opaque(xdrs, objp, FHSIZE)) {
 		 return (FALSE);
@@ -58,7 +58,7 @@
 xdr_fhstatus(XDR *xdrs, fhstatus *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_u_int(xdrs, &objp->fhs_status)) {
 		 return (FALSE);
@@ -79,7 +79,7 @@
 xdr_dirpath(XDR *xdrs, dirpath *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_string(xdrs, objp, MNTPATHLEN)) {
 		 return (FALSE);
@@ -91,7 +91,7 @@
 xdr_name(XDR *xdrs, name *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_string(xdrs, objp, MNTNAMLEN)) {
 		 return (FALSE);
@@ -103,7 +103,7 @@
 xdr_mountlist(XDR *xdrs, mountlist *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_pointer(xdrs, (char **)objp, sizeof(struct mountbody), (xdrproc_t)xdr_mountbody)) {
 		 return (FALSE);
@@ -115,7 +115,7 @@
 xdr_mountbody(XDR *xdrs, mountbody *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_name(xdrs, &objp->ml_hostname)) {
 		 return (FALSE);
@@ -133,7 +133,7 @@
 xdr_groups(XDR *xdrs, groups *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_pointer(xdrs, (char **)objp, sizeof(struct groupnode), (xdrproc_t)xdr_groupnode)) {
 		 return (FALSE);
@@ -145,7 +145,7 @@
 xdr_groupnode(XDR *xdrs, groupnode *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_name(xdrs, &objp->gr_name)) {
 		 return (FALSE);
@@ -160,7 +160,7 @@
 xdr_exports(XDR *xdrs, exports *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_pointer(xdrs, (char **)objp, sizeof(struct exportnode), (xdrproc_t)xdr_exportnode)) {
 		 return (FALSE);
@@ -172,7 +172,7 @@
 xdr_exportnode(XDR *xdrs, exportnode *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_dirpath(xdrs, &objp->ex_dir)) {
 		 return (FALSE);
@@ -190,7 +190,7 @@
 xdr_ppathcnf(XDR *xdrs, ppathcnf *objp)
 {
 
-	 register void *buf=buf;
+	 register int32_t *buf;
 
 	 int i=i;
 
@@ -218,7 +218,7 @@
 
 	  }
 	  else {
-		 IXDR_PUT_LONG(buf,objp->pc_link_max);
+		 IXDR_PUT_INT32(buf,objp->pc_link_max);
 		 IXDR_PUT_SHORT(buf,objp->pc_max_canon);
 		 IXDR_PUT_SHORT(buf,objp->pc_max_input);
 		 IXDR_PUT_SHORT(buf,objp->pc_name_max);
diff -ur ClusterNFS.org/nfs_prot_xdr.c ClusterNFS/nfs_prot_xdr.c
--- ClusterNFS.org/nfs_prot_xdr.c	Tue Sep 25 01:30:02 2001
+++ ClusterNFS/nfs_prot_xdr.c	Tue Dec 21 16:21:59 2004
@@ -46,7 +46,7 @@
 xdr_nfsstat(XDR *xdrs, nfsstat *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_enum(xdrs, (enum_t *)objp)) {
 		 return (FALSE);
@@ -58,7 +58,7 @@
 xdr_ftype(XDR *xdrs, ftype *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_enum(xdrs, (enum_t *)objp)) {
 		 return (FALSE);
@@ -70,7 +70,7 @@
 xdr_nfs_fh(XDR *xdrs, nfs_fh *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 int i=i;
 	 if (!xdr_opaque(xdrs, objp->data, NFS_FHSIZE)) {
@@ -83,7 +83,7 @@
 xdr_nfstime(XDR *xdrs, nfstime *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_u_int(xdrs, &objp->seconds)) {
 		 return (FALSE);
@@ -98,7 +98,7 @@
 xdr_fattr(XDR *xdrs, fattr *objp)
 {
 
-	 register void *buf=buf;
+	 register int32_t *buf;
 
 
 	 if (xdrs->x_op == XDR_ENCODE) {
@@ -273,7 +273,7 @@
 xdr_sattr(XDR *xdrs, sattr *objp)
 {
 
-	 register void *buf=buf;
+	 register int32_t *buf;
 
 
 	 if (xdrs->x_op == XDR_ENCODE) {
@@ -364,7 +364,7 @@
 xdr_filename(XDR *xdrs, filename *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_string(xdrs, objp, NFS_MAXNAMLEN)) {
 		 return (FALSE);
@@ -376,7 +376,7 @@
 xdr_nfspath(XDR *xdrs, nfspath *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_string(xdrs, objp, NFS_MAXPATHLEN)) {
 		 return (FALSE);
@@ -388,7 +388,7 @@
 xdr_attrstat(XDR *xdrs, attrstat *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfsstat(xdrs, &objp->status)) {
 		 return (FALSE);
@@ -409,7 +409,7 @@
 xdr_sattrargs(XDR *xdrs, sattrargs *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfs_fh(xdrs, &objp->file)) {
 		 return (FALSE);
@@ -424,7 +424,7 @@
 xdr_diropargs(XDR *xdrs, diropargs *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfs_fh(xdrs, &objp->dir)) {
 		 return (FALSE);
@@ -439,7 +439,7 @@
 xdr_diropokres(XDR *xdrs, diropokres *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfs_fh(xdrs, &objp->file)) {
 		 return (FALSE);
@@ -454,7 +454,7 @@
 xdr_diropres(XDR *xdrs, diropres *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfsstat(xdrs, &objp->status)) {
 		 return (FALSE);
@@ -475,7 +475,7 @@
 xdr_readlinkres(XDR *xdrs, readlinkres *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfsstat(xdrs, &objp->status)) {
 		 return (FALSE);
@@ -496,7 +496,7 @@
 xdr_readargs(XDR *xdrs, readargs *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfs_fh(xdrs, &objp->file)) {
 		 return (FALSE);
@@ -517,7 +517,7 @@
 xdr_readokres(XDR *xdrs, readokres *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_fattr(xdrs, &objp->attributes)) {
 		 return (FALSE);
@@ -532,7 +532,7 @@
 xdr_readres(XDR *xdrs, readres *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfsstat(xdrs, &objp->status)) {
 		 return (FALSE);
@@ -553,7 +553,7 @@
 xdr_writeargs(XDR *xdrs, writeargs *objp)
 {
 
-	register void  *buf = buf;
+	register int32_t *buf;
 
 
 	if (xdrs->x_op == XDR_ENCODE) {
@@ -627,7 +627,7 @@
 xdr_createargs(XDR *xdrs, createargs *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_diropargs(xdrs, &objp->where)) {
 		 return (FALSE);
@@ -642,7 +642,7 @@
 xdr_renameargs(XDR *xdrs, renameargs *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_diropargs(xdrs, &objp->from)) {
 		 return (FALSE);
@@ -657,7 +657,7 @@
 xdr_linkargs(XDR *xdrs, linkargs *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfs_fh(xdrs, &objp->from)) {
 		 return (FALSE);
@@ -672,7 +672,7 @@
 xdr_symlinkargs(XDR *xdrs, symlinkargs *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_diropargs(xdrs, &objp->from)) {
 		 return (FALSE);
@@ -690,7 +690,7 @@
 xdr_nfscookie(XDR *xdrs, nfscookie objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_opaque(xdrs, objp, NFS_COOKIESIZE)) {
 		 return (FALSE);
@@ -702,7 +702,7 @@
 xdr_readdirargs(XDR *xdrs, readdirargs *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfs_fh(xdrs, &objp->dir)) {
 		 return (FALSE);
@@ -720,7 +720,7 @@
 xdr_entry(XDR *xdrs, entry *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_u_int(xdrs, &objp->fileid)) {
 		 return (FALSE);
@@ -741,7 +741,7 @@
 xdr_dirlist(XDR *xdrs, dirlist *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_pointer(xdrs, (char **)&objp->entries, sizeof(entry), (xdrproc_t)xdr_entry)) {
 		 return (FALSE);
@@ -756,7 +756,7 @@
 xdr_readdirres(XDR *xdrs, readdirres *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfsstat(xdrs, &objp->status)) {
 		 return (FALSE);
@@ -777,7 +777,7 @@
 xdr_statfsokres(XDR *xdrs, statfsokres *objp)
 {
 
-	 register void *buf=buf;
+	 register int32_t *buf;
 
 
 	 if (xdrs->x_op == XDR_ENCODE) {
@@ -861,7 +861,7 @@
 xdr_statfsres(XDR *xdrs, statfsres *objp)
 {
 
-	 register long *buf=buf;
+	 register int32_t *buf;
 
 	 if (!xdr_nfsstat(xdrs, &objp->status)) {
 		 return (FALSE);
